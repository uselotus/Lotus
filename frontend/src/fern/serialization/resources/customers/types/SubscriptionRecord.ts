/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { LotusApi } from "../../../..";
import * as core from "../../../../core";

export const SubscriptionRecord: core.serialization.ObjectSchema<
  serializers.SubscriptionRecord.Raw,
  LotusApi.SubscriptionRecord
> = core.serialization.object({
  startDate: core.serialization.property(
    "start_date",
    core.serialization.string()
  ),
  endDate: core.serialization.property("end_date", core.serialization.string()),
  autoRenew: core.serialization.property(
    "auto_renew",
    core.serialization.boolean()
  ),
  isNew: core.serialization.property("is_new", core.serialization.boolean()),
  subscriptionFilters: core.serialization.property(
    "subscription_filters",
    core.serialization.list(
      core.serialization.lazyObject(
        async () => (await import("../../..")).SubscriptionCategoricalFilter
      )
    )
  ),
  customer: core.serialization.lazyObject(
    async () => (await import("../../..")).LightweightCustomer
  ),
  billingPlan: core.serialization.property(
    "billing_plan",
    core.serialization.lazyObject(
      async () => (await import("../../..")).LightweightPlanVersion
    )
  ),
  fullyBilled: core.serialization.property(
    "fully_billed",
    core.serialization.boolean()
  ),
});

export declare namespace SubscriptionRecord {
  interface Raw {
    start_date: string;
    end_date: string;
    auto_renew: boolean;
    is_new: boolean;
    subscription_filters: serializers.SubscriptionCategoricalFilter.Raw[];
    customer: serializers.LightweightCustomer.Raw;
    billing_plan: serializers.LightweightPlanVersion.Raw;
    fully_billed: boolean;
  }
}
