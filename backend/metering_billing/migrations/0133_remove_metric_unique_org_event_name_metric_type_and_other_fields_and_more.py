# Generated by Django 4.0.5 on 2022-12-26 20:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('metering_billing', '0132_alter_subscriptionrecord_unique_together_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='metric',
            name='unique_org_event_name_metric_type_and_other_fields',
        ),
        migrations.AddField(
            model_name='historicalorganization',
            name='subscription_filters_setting_provisioned',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='historicalorganizationsetting',
            name='setting_values',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='organization',
            name='subscription_filters_setting_provisioned',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='organizationsetting',
            name='setting_values',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='metric',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='metering_billing.organization'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'property_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_metric_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'property_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__bi_me_na'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'property_name', 'is_cost_metric'), name='uq_metric_w_null__bi_ag_ty'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('property_name__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__pr_na'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('granularity__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'property_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('billable_metric_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'property_name', 'is_cost_metric'), name='uq_metric_w_null__bi_me_na_bi_ag_ty'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_metric_name__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__bi_me_na_pr_na'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_metric_name__in', [None, '']), ('granularity__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'property_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__bi_me_na_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'is_cost_metric'), name='uq_metric_w_null__bi_ag_ty_pr_na'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('granularity__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'property_name', 'is_cost_metric'), name='uq_metric_w_null__bi_ag_ty_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('granularity__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__pr_na_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('billable_metric_name__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'granularity', 'event_name', 'is_cost_metric'), name='uq_metric_w_null__bi_me_na_bi_ag_ty_pr_na'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('billable_metric_name__in', [None, '']), ('granularity__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'property_name', 'is_cost_metric'), name='uq_metric_w_null__bi_me_na_bi_ag_ty_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_metric_name__in', [None, '']), ('granularity__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'is_cost_metric', 'billable_aggregation_type'), name='uq_metric_w_null__bi_me_na_pr_na_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('granularity__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('billable_metric_name', 'metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'is_cost_metric'), name='uq_metric_w_null__bi_ag_ty_pr_na_gr'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(condition=models.Q(('billable_aggregation_type__in', [None, '']), ('billable_metric_name__in', [None, '']), ('granularity__in', [None, '']), ('property_name__in', [None, '']), ('status', 'active')), fields=('metric_type', 'organization', 'usage_aggregation_type', 'event_name', 'is_cost_metric'), name='uq_metric_w_null__bi_me_na_bi_ag_ty_pr_na_gr'),
        ),
    ]
