# Generated by Django 4.0.5 on 2022-12-19 07:10

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import metering_billing.utils.utils


class Migration(migrations.Migration):

    dependencies = [
        ('metering_billing', '0128_merge_20221215_2207'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customer',
            name='customer_name',
            field=models.CharField(blank=True, default='', help_text='The display name of the customer', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='email',
            field=models.EmailField(default='defaultemail@lotus.com', help_text='The primary email address of the customer, must be the same as the email address used to create the customer in the payment provider', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='integrations',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='customer',
            name='payment_provider',
            field=models.CharField(blank=True, choices=[('stripe', 'Stripe')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='properties',
            field=models.JSONField(default=dict, help_text='Extra metadata for the customer', null=True),
        ),
        migrations.AlterField(
            model_name='custompricingunitconversion',
            name='from_qty',
            field=models.DecimalField(decimal_places=10, max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='custompricingunitconversion',
            name='to_qty',
            field=models.DecimalField(decimal_places=10, max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='feature',
            name='feature_description',
            field=models.TextField(blank=True, default=''),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='feature',
            name='feature_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='historicalcustomer',
            name='customer_name',
            field=models.CharField(blank=True, default='', help_text='The display name of the customer', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalcustomer',
            name='email',
            field=models.EmailField(default='defaultemail@lotus.com', help_text='The primary email address of the customer, must be the same as the email address used to create the customer in the payment provider', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalcustomer',
            name='integrations',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='historicalcustomer',
            name='payment_provider',
            field=models.CharField(blank=True, choices=[('stripe', 'Stripe')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalcustomer',
            name='properties',
            field=models.JSONField(default=dict, help_text='Extra metadata for the customer', null=True),
        ),
        migrations.AlterField(
            model_name='historicalinvoice',
            name='cost_due',
            field=models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='historicalinvoice',
            name='external_payment_obj_id',
            field=models.CharField(blank=True, default='', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalinvoice',
            name='external_payment_obj_type',
            field=models.CharField(blank=True, choices=[('stripe', 'Stripe')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalinvoice',
            name='invoice_number',
            field=models.CharField(max_length=13),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='billable_aggregation_type',
            field=models.CharField(blank=True, choices=[('count', 'Count'), ('sum', 'Sum'), ('max', 'Max'), ('unique', 'Unique'), ('latest', 'Latest'), ('average', 'Average')], default='sum', max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='billable_metric_name',
            field=models.CharField(blank=True, default='', max_length=50),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='event_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='event_type',
            field=models.CharField(blank=True, choices=[('delta', 'Delta'), ('total', 'Total')], default='total', max_length=20),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='granularity',
            field=models.CharField(blank=True, choices=[('seconds', 'Second'), ('minutes', 'Minute'), ('hours', 'Hour'), ('days', 'Day'), ('months', 'Month'), ('quarters', 'Quarter'), ('years', 'Year'), ('total', 'Total')], default='total', max_length=10),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='metric_id',
            field=models.CharField(blank=True, default=metering_billing.utils.utils.metric_uuid, max_length=100),
        ),
        migrations.AlterField(
            model_name='historicalmetric',
            name='property_name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='historicalorganizationsetting',
            name='setting_group',
            field=models.CharField(blank=True, default='', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='display_version',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The currently active version of the plan. Customers that get signed up for this plan will be assigned this version.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='metering_billing.planversion'),
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='parent_plan',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='If you are using our plan templating feature to create a new plan, this field will be set to the plan that you are using as a template.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='metering_billing.plan'),
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='parent_product',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The product that this plan belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='metering_billing.product'),
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='plan_duration',
            field=models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], help_text='Duration of the plan', max_length=40),
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='plan_name',
            field=models.CharField(help_text='Name of the plan', max_length=100),
        ),
        migrations.AlterField(
            model_name='historicalplan',
            name='target_customer',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='If you are using our plan templating feature to create a new plan, this field will be set to the customer for which this plan is designed for. Keep in mind that this field and the parent_plan field are mutually necessary.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='metering_billing.customer'),
        ),
        migrations.AlterField(
            model_name='historicalplanversion',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalplanversion',
            name='flat_rate',
            field=models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='auto_renew',
            field=models.BooleanField(default=True, help_text='Whether the subscription automatically renews. Defaults to true.'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='billing_plan',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The plan associated with this subscription.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='subscription_record', to='metering_billing.planversion'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='customer',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The customer object associated with this subscription.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='metering_billing.customer'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='end_date',
            field=models.DateTimeField(help_text='The time the subscription starts. This will be a string in yyyy-mm-dd HH:mm:ss format in UTC time.'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='fully_billed',
            field=models.BooleanField(default=False, help_text='Whether the subscription has been fully billed and finalized.'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='is_new',
            field=models.BooleanField(default=True, help_text='Whether this subscription came from a renewal or from a first-time. Defaults to true on creation.'),
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionrecord',
            name='start_date',
            field=models.DateTimeField(help_text='The time the subscription starts. This will be a string in yyyy-mm-dd HH:mm:ss format in UTC time.'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='cost_due',
            field=models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='external_payment_obj_id',
            field=models.CharField(blank=True, default='', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='invoice',
            name='external_payment_obj_type',
            field=models.CharField(blank=True, choices=[('stripe', 'Stripe')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='invoice',
            name='invoice_number',
            field=models.CharField(max_length=13),
        ),
        migrations.AlterField(
            model_name='invoicelineitem',
            name='billing_type',
            field=models.CharField(blank=True, choices=[('in_arrears', 'In Arrears'), ('in_advance', 'In Advance')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='invoicelineitem',
            name='chargeable_item_type',
            field=models.CharField(blank=True, choices=[('usage_charge', 'Usage Charge'), ('recurring_charge', 'Recurring Charge'), ('one_time_charge', 'One Time Charge'), ('plan_adjustment', 'Plan Adjustment'), ('customer_adjustment', 'Customer Adjustment')], default='', max_length=40),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='invoicelineitem',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='invoicelineitem',
            name='quantity',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='metric',
            name='billable_aggregation_type',
            field=models.CharField(blank=True, choices=[('count', 'Count'), ('sum', 'Sum'), ('max', 'Max'), ('unique', 'Unique'), ('latest', 'Latest'), ('average', 'Average')], default='sum', max_length=10),
        ),
        migrations.AlterField(
            model_name='metric',
            name='billable_metric_name',
            field=models.CharField(blank=True, default='', max_length=50),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='metric',
            name='event_name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='metric',
            name='event_type',
            field=models.CharField(blank=True, choices=[('delta', 'Delta'), ('total', 'Total')], default='total', max_length=20),
        ),
        migrations.AlterField(
            model_name='metric',
            name='granularity',
            field=models.CharField(blank=True, choices=[('seconds', 'Second'), ('minutes', 'Minute'), ('hours', 'Hour'), ('days', 'Day'), ('months', 'Month'), ('quarters', 'Quarter'), ('years', 'Year'), ('total', 'Total')], default='total', max_length=10),
        ),
        migrations.AlterField(
            model_name='metric',
            name='metric_id',
            field=models.CharField(blank=True, default=metering_billing.utils.utils.metric_uuid, max_length=100),
        ),
        migrations.AlterField(
            model_name='metric',
            name='property_name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='organizationsetting',
            name='setting_group',
            field=models.CharField(blank=True, default='', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='plan',
            name='display_version',
            field=models.ForeignKey(blank=True, help_text='The currently active version of the plan. Customers that get signed up for this plan will be assigned this version.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='metering_billing.planversion'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='parent_plan',
            field=models.ForeignKey(blank=True, help_text='If you are using our plan templating feature to create a new plan, this field will be set to the plan that you are using as a template.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_plans', to='metering_billing.plan'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='parent_product',
            field=models.ForeignKey(blank=True, help_text='The product that this plan belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_plans', to='metering_billing.product'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='plan_duration',
            field=models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], help_text='Duration of the plan', max_length=40),
        ),
        migrations.AlterField(
            model_name='plan',
            name='plan_name',
            field=models.CharField(help_text='Name of the plan', max_length=100),
        ),
        migrations.AlterField(
            model_name='plan',
            name='target_customer',
            field=models.ForeignKey(blank=True, help_text='If you are using our plan templating feature to create a new plan, this field will be set to the customer for which this plan is designed for. Keep in mind that this field and the parent_plan field are mutually necessary.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_plans', to='metering_billing.customer'),
        ),
        migrations.AlterField(
            model_name='plancomponent',
            name='reset_frequency',
            field=models.CharField(blank=True, choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('none', 'None')], default='none', max_length=10),
        ),
        migrations.AlterField(
            model_name='planversion',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='planversion',
            name='flat_rate',
            field=models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='priceadjustment',
            name='price_adjustment_description',
            field=models.TextField(blank=True, default=''),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='priceadjustment',
            name='price_adjustment_name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='pricetier',
            name='batch_rounding_type',
            field=models.CharField(blank=True, choices=[('round_up', 'Round Up'), ('round_down', 'Round Down'), ('round_nearest', 'Round Nearest'), ('no_rounding', 'No Rounding')], default='no_rounding', max_length=20),
        ),
        migrations.AlterField(
            model_name='pricetier',
            name='cost_per_batch',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='pricetier',
            name='metric_units_per_batch',
            field=models.DecimalField(blank=True, decimal_places=10, default=1.0, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='pricetier',
            name='range_start',
            field=models.DecimalField(decimal_places=10, max_digits=20, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='pricingunit',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricing_units', to='metering_billing.organization'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='auto_renew',
            field=models.BooleanField(default=True, help_text='Whether the subscription automatically renews. Defaults to true.'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='billing_plan',
            field=models.ForeignKey(help_text='The plan associated with this subscription.', on_delete=django.db.models.deletion.CASCADE, related_name='subscription_records', related_query_name='subscription_record', to='metering_billing.planversion'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='customer',
            field=models.ForeignKey(help_text='The customer object associated with this subscription.', on_delete=django.db.models.deletion.CASCADE, related_name='subscription_records', to='metering_billing.customer'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='end_date',
            field=models.DateTimeField(help_text='The time the subscription starts. This will be a string in yyyy-mm-dd HH:mm:ss format in UTC time.'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='filters',
            field=models.ManyToManyField(blank=True, help_text='Add filter key, value pairs that define which events will be applied to this plan subscription.', to='metering_billing.categoricalfilter'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='fully_billed',
            field=models.BooleanField(default=False, help_text='Whether the subscription has been fully billed and finalized.'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='is_new',
            field=models.BooleanField(default=True, help_text='Whether this subscription came from a renewal or from a first-time. Defaults to true on creation.'),
        ),
        migrations.AlterField(
            model_name='subscriptionrecord',
            name='start_date',
            field=models.DateTimeField(help_text='The time the subscription starts. This will be a string in yyyy-mm-dd HH:mm:ss format in UTC time.'),
        ),
        migrations.AlterField(
            model_name='webhookendpoint',
            name='name',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='webhookendpoint',
            name='webhook_url',
            field=models.CharField(max_length=100),
        ),
    ]
